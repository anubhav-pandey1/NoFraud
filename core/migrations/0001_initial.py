# Generated by Django 4.0.4 on 2022-04-24 17:10

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=25, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10000000000'))])),
                ('status', models.CharField(blank=True, choices=[('T', 'Terrorist'), ('NT', 'Not Terrorist')], max_length=20)),
                ('receiver_upi_id', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='invalid_upi_id', message='Please enter a valid Indian UPI ID', regex='^[\\w\\.\\-_]{2,}@[a-zA-Z]{2,}')])),
                ('receiver_account_number', models.CharField(blank=True, max_length=18, null=True, validators=[django.core.validators.RegexValidator(code='invalid_account_number', message='Please enter a valid Indian bank account number', regex='^\\d{9,18}$')])),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('phone_number', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Please enter a valid Indian mobile number', regex='^[6-9]\\d{9}$')])),
                ('upi_id', models.CharField(blank=True, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_upi_id', message='Please enter a valid Indian UPI ID', regex='^[\\w\\.\\-_]{2,}@[a-zA-Z]{2,}')])),
                ('account_number', models.CharField(blank=True, max_length=18, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_account_number', message='Please enter a valid Indian bank account number', regex='^\\d{9,18}$')])),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('account_number__isnull', True), ('upi_id__isnull', True), _negated=True), name='core_user_upi_id_and_or_account_number'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='core.user'),
        ),
        migrations.AddConstraint(
            model_name='transaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('receiver_account_number__isnull', False), ('receiver_upi_id__isnull', True)), models.Q(('receiver_account_number__isnull', True), ('receiver_upi_id__isnull', False)), _connector='OR'), name='core_transaction_receiver_upi_id_or_receiver_account_number'),
        ),
    ]
